<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Jeff&#39;s Blog</title>
    <link>https://jeffdevslife.com/tags/javascript/</link>
    <description>Recent content in javascript on Jeff&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2020, Jeff&#39;s all rights reserved.</copyright>
    <lastBuildDate>Mon, 05 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeffdevslife.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Binary Search Tree</title>
      <link>https://jeffdevslife.com/post/binary-search-tree/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jeffdevslife.com/post/binary-search-tree/</guid>
      <description>Unlike array or linked list which are linear, Binary Search Tree (BST) is constructed in a non-linear form.
Each element inside the BST is called node. It has 2 information from the node which are the current value and pointer that pointing to the next node or their child node. Usually the very first node is known as ROOT and the following will be child node.
There are some rules about this algorithm that is the node pointing from left will be the smaller value node while the node pointing from the right will be the larger value node.</description>
    </item>
    
    <item>
      <title>XMLHttpRequest vs Fetch API</title>
      <link>https://jeffdevslife.com/post/xhr-fetch/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jeffdevslife.com/post/xhr-fetch/</guid>
      <description>In this article, we will have a simple comparison on the XMLHttpRequest code and Fetch API code.
XMLHttpRequest(XHR) objects are used to interact with servers, it uses the concept of AJAX where we can retrieve the data from a URL or backend without having to do a full-page refresh.
In this case, I will be using JSON object as my Request Payload. It&amp;rsquo;s gonna something like this. 1var jsonObj = {}; 2jsonObj.</description>
    </item>
    
    <item>
      <title>Password Detector</title>
      <link>https://jeffdevslife.com/post/password-detector/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jeffdevslife.com/post/password-detector/</guid>
      <description>&lt;p&gt;In this article, we will create an interative password input and use Regular Expression for validation.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>